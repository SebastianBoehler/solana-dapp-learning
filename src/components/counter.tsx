/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/wB4HOBMprQW
 */
import { Button } from "@/components/ui/button"
import { CardContent, Card } from "@/components/ui/card"
import { useConnection, useWallet, useAnchorWallet } from "@solana/wallet-adapter-react";
import React, { FC, useCallback, useEffect } from "react";
import * as anchor from '@project-serum/anchor'
import { Keypair, PublicKey } from "@solana/web3.js";
import { createCounter, decreaseCounter, increaseCounter } from "@/hooks/counter";
import config from "@/config";
import { fetchDataAccount } from "@/hooks/anchor";

const { BN } = anchor

interface CounterAcc { count: number }

export const Counter: FC = () => {
  const { connection } = useConnection();
  const { publicKey } = useWallet();
  const wallet = useAnchorWallet()
  const [dataAcc, setDataAcc] = React.useState<CounterAcc>()
  const [dataAccPubKey, setDataAccPubKey] = React.useState<PublicKey>()
  const WalletData = { connection, wallet, programId: config.programId }

  const getData = async () => {
    if (!dataAccPubKey) return
    const acc = await fetchDataAccount<CounterAcc>(connection, wallet, config.programId, dataAccPubKey)
    if (acc) setDataAcc(acc)
  }

  useEffect(() => {
    setTimeout(() => {
      getData()
    }, 1000 * 2);
  }, [dataAccPubKey])


  const create = useCallback(async () => {
    const { pubKey } = await createCounter(WalletData, publicKey)
    //TODO: notify with hash
    console.log('initiated counter', pubKey.toBase58())
    setDataAccPubKey(pubKey)
  }, [wallet, connection])

  const increase = useCallback(async () => {
    if (!dataAccPubKey) return
    await increaseCounter(WalletData, dataAccPubKey, new BN(4))
    setTimeout(() => {
      getData()
    }, 1000 * 2);
  }, [wallet, connection, dataAccPubKey])

  const decrease = useCallback(async () => {
    if (!dataAccPubKey) return
    await decreaseCounter(WalletData, dataAccPubKey, new BN(20))
    setTimeout(() => {
      getData()
    }, 1000 * 2);
  }, [wallet, connection, dataAccPubKey])

  return (
    <section key="1" className="w-11/12 py-24 mx-auto">
      <div className="container px-4 md:px-6">
        <div className="grid gap-6 lg:grid-cols-[1fr_1fr] lg:gap-12 xl:grid-cols-[1fr_1fr]">
          <div className="flex flex-col justify-center space-y-4">
            <div className="space-y-2">
              <h1 className="text-3xl font-bold tracking-tighter sm:text-5xl xl:text-6xl/none">
                Create and Manage Your Counter
              </h1>
              <p className="max-w-[600px] text-gray-500 md:text-xl dark:text-gray-400">
                Initiate a new counter and manage its value with ease. Click the button below to get started.
              </p>
            </div>
            <div className="flex flex-col gap-2 min-[400px]:flex-row">
              <Button
                className="inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
                onClick={() => { create() }}
                disabled={!publicKey}
              >
                Initiate Counter
              </Button>
            </div>
          </div>
          <Card>
            <CardContent className="flex flex-col items-start gap-2 p-4">
              <div className="space-y-1 leading-none">
                <h2 className="text-2xl font-semibold">Manage Your Counter</h2>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  Use the buttons below to increase or decrease your counter.
                </p>
              </div>
              <div className="flex flex-row gap-2 mt-4">
                <Button
                  onClick={() => { increase() }}
                  disabled={!dataAcc}
                  className="inline-flex h-10 items-center justify-center rounded-md px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300">
                  Increase
                </Button>
                <Button
                  onClick={() => { decrease() }}
                  disabled={!dataAcc}
                  className="inline-flex h-10 items-center justify-center rounded-md px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300">
                  Decrease
                </Button>
              </div>
              <div className="mt-4">
                <p className="text-sm text-gray-500 dark:text-gray-400">Public Address: {dataAccPubKey?.toBase58()}</p>
              </div>
              <div className="mt-2">
                <p className="text-sm text-gray-500 dark:text-gray-400">Current Count: {dataAcc?.count}</p>
              </div>
            </CardContent>
          </Card>
        </div>
        <div className="flex justify-end mt-6" />
      </div>
    </section>
  )
}
